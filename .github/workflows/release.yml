name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Whether to run the publish step in dry-run mode.'
        required: true
        type: boolean
        default: true

jobs:
  release:
    runs-on: ubuntu-latest
    # Use the current repository name dynamically
    if: github.repository == 'google-gemini/gemini-cli'
    permissions:
      contents: write # Required to create a GitHub release
      packages: write # Required to publish to GitHub Packages (if you use it)
      id-token: write # Required for Workload Identity Federation to Google Cloud

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # Fetch all history for versioning
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Check Version Consistency
        run: npm run check:versions

      - name: Set Release Version and Tag
        id: version
        run: |
          RELEASE_VERSION="${GITHUB_REF_NAME#v}"
          if [[ $RELEASE_VERSION == *-* ]]; then
            NPM_TAG=$(echo $RELEASE_VERSION | cut -d'-' -f2 | cut -d'.' -f1)
          else
            NPM_TAG="latest"
          fi
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_OUTPUT
          echo "NPM_TAG=${NPM_TAG}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: '!inputs.dry_run'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ steps.version.outputs.RELEASE_VERSION }} \
            bundle/gemini.js \
            --title "Release v${{ steps.version.outputs.RELEASE_VERSION }}" \
            --generate-notes

      - name: Build and Prepare Packages
        run: |
          npm run build:packages
          npm run prepare:package

      - name: Configure npm for publishing
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://wombat-dressing-room.appspot.com'
          scope: '@google'

      - name: Publish @google/gemini-cli-core
        run: npm publish --workspace=@google/gemini-cli-core --tag=${{ steps.version.outputs.NPM_TAG }} ${{ inputs.dry_run && '--dry-run' || '' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WOMBAT_TOKEN_CORE }}

      - name: Publish @google/gemini-cli
        run: npm publish --workspace=@google/gemini-cli --tag=${{ steps.version.outputs.NPM_TAG }} ${{ inputs.dry_run && '--dry-run' || '' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WOMBAT_TOKEN_CLI }}
